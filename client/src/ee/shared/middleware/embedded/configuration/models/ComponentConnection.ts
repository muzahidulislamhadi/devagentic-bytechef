/* tslint:disable */
/* eslint-disable */
/**
 * The Embedded Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComponentConnection
 */
export interface ComponentConnection {
    /**
     * The name of the component
     * @type {string}
     * @memberof ComponentConnection
     */
    componentName: string;
    /**
     * The version of the component
     * @type {number}
     * @memberof ComponentConnection
     */
    componentVersion: number;
    /**
     * The key of the connection
     * @type {string}
     * @memberof ComponentConnection
     */
    key: string;
    /**
     * If the connection is required, or not
     * @type {boolean}
     * @memberof ComponentConnection
     */
    required: boolean;
    /**
     * 
     * @type {string}
     * @memberof ComponentConnection
     */
    workflowNodeName: string;
}

/**
 * Check if a given object implements the ComponentConnection interface.
 */
export function instanceOfComponentConnection(value: object): value is ComponentConnection {
    if (!('componentName' in value) || value['componentName'] === undefined) return false;
    if (!('componentVersion' in value) || value['componentVersion'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('required' in value) || value['required'] === undefined) return false;
    if (!('workflowNodeName' in value) || value['workflowNodeName'] === undefined) return false;
    return true;
}

export function ComponentConnectionFromJSON(json: any): ComponentConnection {
    return ComponentConnectionFromJSONTyped(json, false);
}

export function ComponentConnectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentConnection {
    if (json == null) {
        return json;
    }
    return {
        
        'componentName': json['componentName'],
        'componentVersion': json['componentVersion'],
        'key': json['key'],
        'required': json['required'],
        'workflowNodeName': json['workflowNodeName'],
    };
}

export function ComponentConnectionToJSON(json: any): ComponentConnection {
    return ComponentConnectionToJSONTyped(json, false);
}

export function ComponentConnectionToJSONTyped(value?: ComponentConnection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'componentName': value['componentName'],
        'componentVersion': value['componentVersion'],
        'key': value['key'],
        'required': value['required'],
        'workflowNodeName': value['workflowNodeName'],
    };
}

