/* tslint:disable */
/* eslint-disable */
/**
 * The Embedded Configuration Internal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Workflow } from './Workflow';
import {
    WorkflowFromJSON,
    WorkflowFromJSONTyped,
    WorkflowToJSON,
    WorkflowToJSONTyped,
} from './Workflow';

/**
 * 
 * @export
 * @interface ConnectedUserProjectWorkflow
 */
export interface ConnectedUserProjectWorkflow {
    /**
     * The connected user id
     * @type {number}
     * @memberof ConnectedUserProjectWorkflow
     */
    connectedUserId?: number;
    /**
     * The project id
     * @type {number}
     * @memberof ConnectedUserProjectWorkflow
     */
    projectId?: number;
    /**
     * The workflow version
     * @type {number}
     * @memberof ConnectedUserProjectWorkflow
     */
    workflowVersion?: number;
    /**
     * 
     * @type {Workflow}
     * @memberof ConnectedUserProjectWorkflow
     */
    workflow?: Workflow;
}

/**
 * Check if a given object implements the ConnectedUserProjectWorkflow interface.
 */
export function instanceOfConnectedUserProjectWorkflow(value: object): value is ConnectedUserProjectWorkflow {
    return true;
}

export function ConnectedUserProjectWorkflowFromJSON(json: any): ConnectedUserProjectWorkflow {
    return ConnectedUserProjectWorkflowFromJSONTyped(json, false);
}

export function ConnectedUserProjectWorkflowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConnectedUserProjectWorkflow {
    if (json == null) {
        return json;
    }
    return {
        
        'connectedUserId': json['connectedUserId'] == null ? undefined : json['connectedUserId'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'workflowVersion': json['workflowVersion'] == null ? undefined : json['workflowVersion'],
        'workflow': json['workflow'] == null ? undefined : WorkflowFromJSON(json['workflow']),
    };
}

export function ConnectedUserProjectWorkflowToJSON(json: any): ConnectedUserProjectWorkflow {
    return ConnectedUserProjectWorkflowToJSONTyped(json, false);
}

export function ConnectedUserProjectWorkflowToJSONTyped(value?: ConnectedUserProjectWorkflow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'connectedUserId': value['connectedUserId'],
        'projectId': value['projectId'],
        'workflowVersion': value['workflowVersion'],
        'workflow': WorkflowToJSON(value['workflow']),
    };
}

